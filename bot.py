from telegram import (
    Update,
    ReplyKeyboardMarkup,
    KeyboardButton
)
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes
)

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = "7834055152:AAHbGBpdWlS3KiycHh39-e1X-Vn98BFyzn4"
ADMIN_CHAT_ID = -1003138276027  # ID –≥—Ä—É–ø–ø—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

# === –°–¢–ê–†–¢ ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [KeyboardButton("üá∫üáø O'zbekcha"), KeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π")]
    ]
    await update.message.reply_text(
        "Tilni tanlang / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    )

# === –û–ë–†–ê–ë–û–¢–ö–ê –í–´–ë–û–†–ê –Ø–ó–´–ö–ê ===
async def handle_language(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if "O'zbekcha" in text:
        context.user_data["lang"] = "uz"
        keyboard = [
            [KeyboardButton("üí≥ Kontrakt to'lovi bo'yicha")],
            [KeyboardButton("üßæ Imtihon bo'yicha savol")],
            [KeyboardButton("üìö Dars jarayonlari")],
            [KeyboardButton("üåê LMS bo'yicha")],
            [KeyboardButton("üè´ Dars jarayonlari va xonalari")]
        ]
        await update.message.reply_text(
            "Bo'limni tanlang:",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )

    elif "–†—É—Å—Å–∫–∏–π" in text:
        context.user_data["lang"] = "ru"
        keyboard = [
            [KeyboardButton("üí≥ –ü–æ –æ–ø–ª–∞—Ç–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞")],
            [KeyboardButton("üßæ –í–æ–ø—Ä–æ—Å –ø–æ —ç–∫–∑–∞–º–µ–Ω—É")],
            [KeyboardButton("üìö –£—á–µ–±–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å")],
            [KeyboardButton("üåê –ü–æ LMS")],
            [KeyboardButton("üè´ –ü—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è –∏ –∞—É–¥–∏—Ç–æ—Ä–∏–∏")]
        ]
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )

# === –ü–û–õ–£–ß–ï–ù–ò–ï –°–û–û–ë–©–ï–ù–ò–Ø –û–¢ –°–¢–£–î–ï–ù–¢–ê ===
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    message = update.message.text

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –≥—Ä—É–ø–ø—É –∞–¥–º–∏–Ω—É
    msg_to_admin = (
        f"üì© <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞</b>\n"
        f"üë§ –ò–º—è: {user.first_name or ''} {user.last_name or ''}\n"
        f"üÜî ID: <code>{user.id}</code>\n"
        f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:\n{message}\n\n"
        f"–ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n<code>/reply {user.id} –≤–∞—à_–æ—Ç–≤–µ—Ç</code>"
    )
    await context.bot.send_message(
        chat_id=ADMIN_CHAT_ID,
        text=msg_to_admin,
        parse_mode="HTML"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç—É–¥–µ–Ω—Ç—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    lang = context.user_data.get("lang", "ru")
    if lang == "uz":
        await update.message.reply_text("Xabaringiz yuborildi ‚úÖ")
    else:
        await update.message.reply_text("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ‚úÖ")

# === –ö–û–ú–ê–ù–î–ê –û–¢–í–ï–¢–ê –ê–î–ú–ò–ù–ê ===
async def reply_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_chat.id != ADMIN_CHAT_ID:
        return  # —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω-–≥—Ä—É–ø–ø–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å /reply

    try:
        user_id = int(context.args[0])
        text_to_send = " ".join(context.args[1:])
        await context.bot.send_message(chat_id=user_id, text=f"üì© –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n{text_to_send}")
        await update.message.reply_text("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
    except Exception as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞: {e}\n\n–ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç:\n/reply [user_id] [—Ç–µ–∫—Å—Ç]")

# === –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø ===
def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("reply", reply_command))
    app.add_handler(MessageHandler(filters.Regex("O'zbekcha|–†—É—Å—Å–∫–∏–π"), handle_language))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
